<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:disableMasterStylesheet="true" MadCap:tocPath="Creating Custom Probes|Command Line Probes" MadCap:InPreviewMode="false" MadCap:RuntimeFileType="Topic" MadCap:TargetType="WebHelp" class="" MadCap:PathToHelpSystem="../../" MadCap:HelpSystemFileName="index.xml" MadCap:SearchType="Stem">
    <head><title>Companion Scripts</title>
        <meta name="description" content="Dartware network monitoring: Testing the description tag." />
        <link href="../SkinSupport/MadCap.css" rel="stylesheet" />
        <link href="../Resources/default.css" rel="stylesheet" />
        <script src="../SkinSupport/MadCapAll.js" type="text/javascript">
        </script>
    </head>
    <body>
        <div id="dartware_toclink" class="dartware_toclink"><a name="dartware_a" href="#">Show TOC</a>
        </div>
        <div class="pagewidth">
            <h1 MadCap:conditions="" class="L2">Companion Scripts</h1>
            <p>A companion script provides an easy way to deliver a command-probe and a script for it to run. It also ensures that the version of the script matches the version  of the probe.</p>
            <p>To deliver a script along with a probe, add a section to  the probe as  follows:</p>
            <pre class="code">
&lt;tool:scriptname&gt;
&lt;/tool:scriptname&gt;</pre>
            <p>where  <span class="code">scriptname</span> is the name given to the companion script when it is written to disk. Currently, a probe can contain only one <span class="code">&lt;tool&gt;</span> section.</p>
            <p><b>Note:</b> When the InterMapper server starts or when probes are  reloaded, if a tool section appears for a probe, InterMapper creates a  subdirectory of Tools with the canonical name of the probe and writes the  script to that subdirectory, using <span class="code">scriptname</span> as a file name. If a  subdirectory of that name already exists, all non-hidden files are deleted before the script is written out. When InterMapper is ready to run  the command line specified in the command-line probe, it will make the  probe's subdirectory of Tools the current working directory. For this reason, you should avoid editing scripts directly in the subdirectories of InterMapper Settings/Tools directory.</p>
            <p>For example,  given the trivial example of a command-line probe where the canonical name is <span class="code">com.dartware.cmdline.test</span>, where the <span class="code">cmd</span> clause in the <span class="code">&lt;command-line&gt;</span>  section is:</p>
            <pre class="code">cmd="python test.py"</pre>
            <p>or, using the ${PYTHON} macro:</p>
            <pre class="code" xml:space="preserve">cmd="${PYTHON}  test.py"</pre>
            <p>and the tool section  is:</p>
            <pre class="code">
&lt;tool:test.py&gt;
  # Trivial  example
  print "okay"
  raise SystemExit,  0
&lt;/tool:test.py&gt;</pre>
            <p>When InterMapper starts or reloads probes, a  subdirectory of Tools named <span class="code">com.dartware.cmdline.test</span> is created if it doesn't exist, and (in this case) a file named "test.py" is written into it, containing the text between <span class="code">&lt;tool:test.py&gt;</span> and <span class="code">&lt;/tool:test.py&gt;</span>.</p>
            <p>The  WMI probes provide a number of good examples of this feature.</p>
            <h2>Python Example</h2>
            <pre class="code">
&lt;!-- 
Companion Script Example in Python - testing the &lt;tool:xxx&gt; section (com.dartware.companionscript.python.txt) 
Please feel free to use this as a base for further development.
Original Version: 24 Nov 2009 
--&gt; 

&lt;header&gt; 
   type         =   "cmd-line" 
   package      =   "com.dartware" 
   probe_name   =   "companionscript.python" 
   human_name   =   "Companion Script-Python" 
   version      =   "1.0" 
   address_type =   "IP" 
   display_name =   "Miscellaneous/Test/Companion Script-Python"
&lt;/header&gt; 

&lt;description&gt; 
\GB\Companion Script Example in Python - Using the &lt;tool:xxx&gt; Section of a Probe\p\

This probe launches a trivial Companion Script -- a two-line Python script that's embedded within the probe. 

The script sets and returns two values ($val1 and $val2), and also shows how to set the probe's condition string.

In addition, the exit status (set to "1" in this example) sets the severity of the device.
&lt;/description&gt; 

&lt;parameters&gt; 
&lt;/parameters&gt; 

&lt;command-line&gt; 
   path=""
   cmd="${PYTHON}" 
   arg="test.py"
&lt;/command-line&gt; 

&lt;command-exit&gt;
-- The full range of InterMapper status/exit codes
       down:   ${EXIT_CODE}=4
   critical:   ${EXIT_CODE}=3 
      alarm:   ${EXIT_CODE}=2 
       warn:   ${EXIT_CODE}=1 
       okay:   ${EXIT_CODE}=0 
&lt;/command-exit&gt; 

&lt;command-display&gt; 
\b5\Companion Script Return Values\p0\ 
\4\  Value1:\0\ $val1
\4\  Value2:\0\ $val2
&lt;/command-display&gt; 

&lt;tool:test.py&gt;
# Trivial example to return two values and a text condition string
print "\{ $val1 := 1, $val2 := 'abcdef' }Condition string - device should be yellow"

# Return code sets device status (Warn = 1)
raise SystemExit, 1
&lt;/tool:test.py&gt;
</pre>
            <h2>Cscript Example</h2>
            <pre class="code">
&lt;!-- 
  Companion Script Example in VBScript - testing the &lt;tool:xxx&gt; section (com.dartware.companionscript.vbscript.txt) 
  Please feel free to use this as a base for further development.
  Original Version: 24 Nov 2009 
--&gt; 

&lt;header&gt; 
   type         =   "cmd-line" 
   package      =   "com.dartware" 
   probe_name   =   "companionscript.vbscript" 
   human_name   =   "Companion Script-VBScript" 
   version      =   "1.0" 
   address_type =   "IP" 
   display_name =   "Miscellaneous/Test/Companion Script-VBScript"
&lt;/header&gt; 

&lt;description&gt; 
\GB\Companion Script Example in VBScript - Using the &lt;tool:xxx&gt; Section of a Probe\p\

This probe launches a trivial Companion Script -- a two-line VB script that's embedded within the probe. 

The script sets and returns two values ($val1 and $val2), and also shows how to set the probe's condition string.

In addition, the exit status (set to "1" in this example) sets the severity of the device.
&lt;/description&gt; 

&lt;parameters&gt; 
&lt;/parameters&gt; 

&lt;command-line&gt; 
   path=""
   cmd="${CSCRIPT}" 
   arg="test.vbs"
&lt;/command-line&gt; 

&lt;command-exit&gt;
-- The full range of InterMapper status/exit codes
       down:   ${EXIT_CODE}=4
   critical:   ${EXIT_CODE}=3 
      alarm:   ${EXIT_CODE}=2 
       warn:   ${EXIT_CODE}=1 
       okay:   ${EXIT_CODE}=0 
&lt;/command-exit&gt; 

&lt;command-display&gt; 
\b5\Companion Script Return Values\p0\ 
\4\  Value1:\0\ $val1
\4\  Value2:\0\ $val2
&lt;/command-display&gt; 

&lt;tool:test.vbs&gt;
  ' Trivial example to return two values and a text condition string
  wscript.Echo "\{ $val1 := 1, $val2 := 'abcdef' }Condition string - device should be yellow"

  ' Return code sets device status (Warn = 1)
  wscript.quit(1)
&lt;/tool:test.vbs&gt;
</pre>
        </div>
        <p>
            <script id="dartwarejs" name="dartwarejs" type="text/javascript" src="../dartware.js">
            </script>
        </p>
        <script type="text/javascript" src="../SkinSupport/MadCapBodyEnd.js">
        </script>
    </body>
</html>