<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-US" xml:lang="en-US" class="no-feedback" data-mc-search-type="Stem" data-mc-help-system-file-name="index.xml" data-mc-path-to-help-system="../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="Creating Your Own Probes">
    <head>
        <meta charset="utf-8" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>About Custom SNMP Trap Probes</title>
        <meta name="description" content="Dartware network monitoring: Testing the description tag." />
        <link href="../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../Resources/default.css" rel="stylesheet" />
        <style>/*&lt;meta /&gt;*/

.previous-topic-button
{
	-pie-background: url('../../Skins/Default/Stylesheets/Images/navigate-previous.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.current-topic-index-button
{
	
}

.next-topic-button
{
	-pie-background: url('../../Skins/Default/Stylesheets/Images/navigate-next.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.needs-pie
{
	behavior: url('../../Resources/Scripts/PIE-no-motw.htc');
}

</style>
        <script src="../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div id="dartware_toclink" class="dartware_toclink"><a name="dartware_a" href="#">Show TOC</a>
        </div>
        <div class="pagewidth">
            <h1 data-mc-conditions="Primary.online">About Custom SNMP Trap Probes</h1>
            <h1 class="L2" data-mc-conditions="Primary.online"> <![CDATA[         ]]></h1>
            <p class="code">type = "custom-snmp-trap"</p>
            <p>A <em>trap</em> is an unsolicited packet sent from a device to
            InterMapper (or other SNMP management console). The trap generally
            contains one or more data values that give information about the
            device's state.
</p>
            <p>When a trap arrives, InterMapper first determines which device(s)
            on the enabled maps should receive information from the trap. InterMapper examines the Agent Address
            (for relayed traps) or the Source IP address, and passes a copy of
            the trap packet to <i>each</i> device on the maps whose IP address
            matches. For example, if a device with the IP address is on two
            maps, or is present twice on the same map, each of those devices
            will receive a copy of the trap.
         </p>
            <p>InterMapper then parses out the all the values from the trap and assigns them to
trap variables for use in the remainder of the probe..       InterMapper then re-evaluates the expressions in the probe, and
            sets the device status appropriately. If a particular trap variable
            is not set by an incoming trap, expressions containing that
            variable are <i>not</i> evaluated. See the <a href="snmp-device-variables-traps.htm">The &lt;snmp-device-variables&gt; Section for Traps</a> section below for
            details of defining trap variables.
         </p>
            <p>Finally, as a result of receiving the trap, InterMapper             re-polls the device that sent the trap. This guarantees that
            InterMapper has the most up-to-date information about the device's
            state. If another trap arrives before the final response of this
            new poll has returned, InterMapper will complete the current poll
            and initiate another round of polling to get the new state.
</p>
            <p><b>Note:</b> A trap is sent as a UDP packet. If something on your network is causing packet loss, it is possible to lose a trap packet. Therefore, Dartware recommends that you don't rely completely on traps as a means for monitoring the health of a device. There is no substitute for regular polling. <a name="traponly"></a></p>
            <p>The <a href="trapexample.htm">Example Trap Probe<a href="trapexample.htm" title="" alt="" class="MCXref xref"> </a></a> demonstrates how to retrieve and display the contents of a trap.</p>
        </div>
        <p>
            <script id="dartwarejs" name="dartwarejs" type="text/javascript" src="../dartware.js">
            </script>
        </p>
        <div class="buttons inline-buttons clearfix topicToolbarProxy" style="mc-topic-toolbar-items: ;text-align: left;">
            <div class="button-group-container-left">
                <div class="button-group">
                    <button class="button needs-pie previous-topic-button" title="Navigate previous">
                    </button>
                    <div class="button current-topic-index-button disabled"><span class="sequence-index"></span> of <span class="sequence-total"></span></div>
                    <button class="button needs-pie next-topic-button" title="Navigate next">
                    </button>
                </div>
            </div>
        </div>
    </body>
</html>