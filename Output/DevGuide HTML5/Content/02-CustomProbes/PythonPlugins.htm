<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-US" xml:lang="en-US" class="no-feedback" data-mc-search-type="Stem" data-mc-help-system-file-name="index.xml" data-mc-path-to-help-system="../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="Creating Your Own Probes|Command Line Probes">
    <head>
        <meta charset="utf-8" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>InterMapper Python Plugins</title>
        <meta name="description" content="Dartware network monitoring: Testing the description tag." />
        <link href="../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../Resources/default.css" rel="stylesheet" />
        <style>/*&lt;meta /&gt;*/

.previous-topic-button
{
	-pie-background: url('../../Skins/Default/Stylesheets/Images/navigate-previous.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.current-topic-index-button
{
	
}

.next-topic-button
{
	-pie-background: url('../../Skins/Default/Stylesheets/Images/navigate-next.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.needs-pie
{
	behavior: url('../../Resources/Scripts/PIE-no-motw.htc');
}

</style>
        <script src="../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div id="dartware_toclink" class="dartware_toclink"><a name="dartware_a" href="#">Show TOC</a>
        </div>
        <div class="pagewidth">
            <h1 class="L2">InterMapper Python Plugins</h1>
            <p>InterMapper DataCenter ships with an embedded Python interpreter. You may use  this interpreter to write command-line probe scripts and command-line notifiers. This Python interpreter is a good way to give maximum
compatibility across systems. In InterMapper DataCenter <span class="PrimaryCurrentVersion">5.6</span>, the version of Python we ship is <span class="PrimaryPythonVersion">2.6</span>, with optimized 
system libraries.</p>
            <p>An extensive introductory tutorial on Python is available at <a href="http://docs.python.org/tut">http://docs.python.org/tut</a></p>
            <p>As shipped, this Python interpreter requires the use of optimized
and  stripped mode (-OO), so the interpreter must be invoked as:</p>
            <table>
                <col style="width: 93px;" />
                <col />
                <tr>
                    <td align="right"><b>MacOSX/<br />Linux/<br />Unix: </b>
                    </td>
                    <td class="code">/usr/local/imdc/core/python/bin/imdc  -OO [script_name]</td>
                </tr>
                <tr>
                    <td align="right"><b>Windows:           </b>
                    </td>
                    <td class="code">c:\Program Files\InterMapper\dwf\core\python\imdc.exe -OO  [script_name]</td>
                </tr>
            </table>
            <p><b>Notes:</b> <![CDATA[ ]]></p>
            <ul>
                <li value="1">Use the ${PYTHON} macro as shown below; it automatically
determines the platform and expands to the proper path to the interpreter with
the <span class="code">-OO</span> argument.
		</li>
                <li value="2">Use the  (&lt;tools:sample.py&gt; in the example below) to incorporate the Python script
directly into the probe file itself.
	</li>
            </ul>
            <h3>Simple example</h3>
            <p>A simple sample probe that includes a Python script might look like this. The script automatically gets saved in the InterMapper Settings/Tools directory.</p><pre class="code">
&lt;!--
  Command Line Python Sample (com.dartware.python.sample.txt)
  Custom Probe for InterMapper (http://www.intermapper.com)
  Please feel free to use it as a base for further development.
  Original version 31 Mar 2004 by Christopher L. Sweeney, Dartware, LLC.
  Updated 13 Jun 2007 by Stephen P. Ryan, Dartware, LLC, for Python
  Updated 28 Dec 2007 to update text descriptions and 
     include display_name header line -reb
  Updated 3 Jan 2010 to include ${PYTHON} macro -reb
--&gt;

&lt;header&gt;
   type="cmd-line"
   package="com.dartware"
   probe_name="python.sample"
   human_name="Python Sample"
   version="1.1"
   address_type="IP"
   display_name = "Miscellaneous/Test/Python Sample"
&lt;/header&gt;

&lt;description&gt;
\GB\Python Sample Command-Line Probe\p\

A sample command line probe which executes a Python script. 

The Python script generates and returns a random number which sets
the device status to one of four values Down/Alarm/Warning/OK.

&lt;/description&gt;

&lt;parameters&gt;
&lt;/parameters&gt;

&lt;command-line&gt;
   path=""
   cmd="${PYTHON} sample.py ${ADDRESS}"
   arg=""
&lt;/command-line&gt;

&lt;command-exit&gt;
   down:${EXIT_CODE}=3
   alarm:${EXIT_CODE}=2
   warning:${EXIT_CODE}=1
   okay:${EXIT_CODE}=0
&lt;/command-exit&gt;

&lt;command-display&gt;
&lt;/command-display&gt;
<br />&lt;tool:sample.py&gt;<br />
#! /usr/local/imdc/core/python/bin/imdc -OO
# Sample Python script uses InterMapper's Python interpreter

import sys

if (len(sys.argv) &lt; 2):
  print "Usage: %s _address_" % sys.argv[0]
  sys.exit(0)
addr = sys.argv[1]

# Code to get status from device at address addr
import random
result = random.randrange(4)

print "Pretending we got result %d from device at address %s" % (result, addr)
sys.exit(result)
<br />&lt;/tool:sample.py&gt;<br /></pre>
        </div>
        <p>
            <script id="dartwarejs" name="dartwarejs" type="text/javascript" src="../dartware.js">
            </script>
        </p>
        <div class="buttons inline-buttons clearfix topicToolbarProxy" style="mc-topic-toolbar-items: ;text-align: left;">
            <div class="button-group-container-left">
                <div class="button-group">
                    <button class="button needs-pie previous-topic-button" title="Navigate previous">
                    </button>
                    <div class="button current-topic-index-button disabled"><span class="sequence-index"></span> of <span class="sequence-total"></span></div>
                    <button class="button needs-pie next-topic-button" title="Navigate next">
                    </button>
                </div>
            </div>
        </div>
    </body>
</html>