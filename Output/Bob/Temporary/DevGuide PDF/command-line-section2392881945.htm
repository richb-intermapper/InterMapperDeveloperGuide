<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="4" MadCap:lastHeight="879" MadCap:lastWidth="1148" MadCap:disableMasterStylesheet="true" MadCap:tocPath="Creating Your Own Probes|Command Line Probes" MadCap:medium="print" MadCap:InPreviewMode="false" MadCap:PreloadImages="false" MadCap:RuntimeFileType="Topic" MadCap:TargetType="PDF">
    <head><title>The &lt;command-line&gt; Section</title>
        <link href="file:///E:/Projects/Doc Projects/Dartware/Flare-InterMapper/InterMapper Developer Guide/Output/Bob/Temporary/DevGuide PDF/DevGuide PDF_6249A6BB/Resources/default.css" rel="stylesheet" type="text/css" />
    </head>
    <body>
        <h1 class="L2" MadCap:xrefTargetName="The &lt;command-line&gt; Section" MadCap:sourceTitle="The &lt;command-line&gt; Section"><a MadCap:generatedBookmark="TOC" name="The &lt;command-line&gt; Section"></a>The <span class="code">&lt;command-line&gt;</span> Section</h1>
        <p>The <span class="code">&lt;command-line&gt;</span> section allows you to specify the information 
 needed to execute the commands for the probe. There are three variables:</p>
        <ul>
            <li value="1"><b>path</b> - specify the path to the executable script/command.<MadCap:keyword term="PATH" /></li>
            <li value="2"><b>cmd</b> - specify the actual script/command.</li>
            <li value="3"><b>arg</b> - specify the arguments to be passed to the script/command.</li>
            <li value="4"><b>input</b> - specify information to pass to STDIN to the script/command.</li>
        </ul>
        <h3>The Properties of the <span class="code">&lt;command-line&gt;</span> Section </h3>
        <ul>
            <li value="1"><a name="path"></a> Use the <span class="code">path</span> property to specify the directories in which InterMapper should 
 look for the executable to run as a probe. This is the only path InterMapper 
 will use; the PATH environment variable is not used. The <span class="code">path</span> property follows 
 the conventions for the PATH environment variable on the system hosting 
 InterMapper. The example below is for Unix or Mac OS X. A path for Windows 
 would use "\" instead of "/" and ";" instead of ":". <br /><br /><b>Notes:</b><br />- If no path is specified, <i>InterMapper Settings/Tools</i> is used as the path.<br />- On Unix systems, it might be possible to see the command line arguments in the 'ps' listing. This represents a security vulnerability. Use the <span class="code">input</span> variable to pass values to stdin, removing this vulnerability. For more information, see <a href="#stdin">Sending Data to STDIN<MadCap:xref href="#stdin" target="" title="" alt="" MadCap:xrefTarget="$$xref$$_63"> (Pg 1)</MadCap:xref></a>, below.<br /><br /></li>
            <li value="2">Use the <span class="code">cmd</span> <![CDATA[ ]]>property to specify the executable you wish to run. In the example 
 below, this is "check_ping". Note that you need to specify the exact name, 
 including any extensions such as .exe or .cmd. You may also specify arguments 
 as part of the <span class="code">cmd</span> property if you'd like. </li>
            <li value="3">Use the <span class="code">arg</span> property to specify arguments to the executable. This may be 
 instead of or in addition to specifying them in the <span class="code">cmd</span> property. We could 
 have just as easily written our sample <span class="code">cmd</span> property as a command and argument, 
 like this: 
  <br /><pre class="code">&lt;command-line&gt;<br />&#160;&#160;path = ""<br />&#160;&#160;cmd &#160;= "check_ping" <br />&#160;&#160;arg &#160;= "-H ${ADDRESS} -w 100,10% -c 1000,90%" <br />&lt;/command-line&gt;</pre></li>
            <li value="4">Use the <span class="code">input</span> property to pass information to STDIN. See <a href="#stdin">Sending Data to STDIN</a>, below.</li>
        </ul>
        <p class="indent">
            <MadCap:keyword term="PORT" />Note the use of the "${ADDRESS}" macro. This is replaced with 
 the address given when the device was created. You can also use the "${PORT}" 
 macro to indicate the port given when the device was created. </p>
        <h2 class="pagebreakbefore" MadCap:xrefTargetName="$$xref$$_63" MadCap:sourceTitle="The &lt;command-line&gt; Section"><a name="stdin"></a>Sending Data to STDIN</h2>
        <p>Using the <span class="code">ps</span> command on Unix systems, or using the Task Manager or other utility programs on Windows systems, it is possible to see the command line arguments. This represents a security vulnerability.  Use the <span class="code">input</span> variable to pass sensitive data to stdin, removing this vulnerability.</p>
        <p>This mechanism provides a less visible channel for sensitive communication to a
probe script. Usernames, passwords, and SSL pass-phrases are likely
candidates for this technique.</p>
        <p style="font-weight: bold;">Example:</p><pre class="code" xml:space="preserve">&lt;command-line&gt;<br></br>&#160;&#160;cmd = "executable"
&#160;&#160;input = "${User} ${Password}"<br></br>&lt;/command-line&gt;</pre>
    </body>
</html>